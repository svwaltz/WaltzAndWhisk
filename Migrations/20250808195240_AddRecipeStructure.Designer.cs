// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WaltzAndWhisk.Data;

#nullable disable

namespace WaltzAndWhisk.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250808195240_AddRecipeStructure")]
    partial class AddRecipeStructure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("WaltzAndWhisk.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipeSectionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecipeSectionId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.InstructionStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipeSectionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StepNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecipeSectionId");

                    b.ToTable("InstructionSteps");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActiveTimeMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InactiveTimeMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MacrosPerServing")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Servings")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.RecipeSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SectionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TextContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeSections");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Ingredient", b =>
                {
                    b.HasOne("WaltzAndWhisk.Models.RecipeSection", "RecipeSection")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipeSection");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.InstructionStep", b =>
                {
                    b.HasOne("WaltzAndWhisk.Models.RecipeSection", "RecipeSection")
                        .WithMany("InstructionSteps")
                        .HasForeignKey("RecipeSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipeSection");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.RecipeSection", b =>
                {
                    b.HasOne("WaltzAndWhisk.Models.Recipe", "Recipe")
                        .WithMany("Sections")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Recipe", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.RecipeSection", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("InstructionSteps");
                });
#pragma warning restore 612, 618
        }
    }
}
