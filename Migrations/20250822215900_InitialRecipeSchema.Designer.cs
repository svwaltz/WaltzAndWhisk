// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WaltzAndWhisk.Data;

#nullable disable

namespace WaltzAndWhisk.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250822215900_InitialRecipeSchema")]
    partial class InitialRecipeSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WaltzAndWhisk.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IngredientSubsectionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientSubsectionId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.IngredientSubsection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IngredientsSectionId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientsSectionId");

                    b.ToTable("IngredientSubsections");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.IngredientsSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId")
                        .IsUnique();

                    b.ToTable("IngredientsSections");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Instruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InstructionSubsectionId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("StepText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstructionSubsectionId");

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.InstructionSubsection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InstructionsSectionId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstructionsSectionId");

                    b.ToTable("InstructionSubsections");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.InstructionsSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId")
                        .IsUnique();

                    b.ToTable("InstructionsSections");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Macros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<decimal>("Carbs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Protein")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId")
                        .IsUnique();

                    b.ToTable("Macros");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CookTimeMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InactiveTimeMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<int>("NumServings")
                        .HasColumnType("int");

                    b.Property<int>("PrepTimeMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.RecipeImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeImages");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Ingredient", b =>
                {
                    b.HasOne("WaltzAndWhisk.Models.IngredientSubsection", "IngredientSubsection")
                        .WithMany("Items")
                        .HasForeignKey("IngredientSubsectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IngredientSubsection");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.IngredientSubsection", b =>
                {
                    b.HasOne("WaltzAndWhisk.Models.IngredientsSection", "IngredientsSection")
                        .WithMany("Subsections")
                        .HasForeignKey("IngredientsSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IngredientsSection");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.IngredientsSection", b =>
                {
                    b.HasOne("WaltzAndWhisk.Models.Recipe", "Recipe")
                        .WithOne("Ingredients")
                        .HasForeignKey("WaltzAndWhisk.Models.IngredientsSection", "RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Instruction", b =>
                {
                    b.HasOne("WaltzAndWhisk.Models.InstructionSubsection", "InstructionSubsection")
                        .WithMany("Steps")
                        .HasForeignKey("InstructionSubsectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstructionSubsection");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.InstructionSubsection", b =>
                {
                    b.HasOne("WaltzAndWhisk.Models.InstructionsSection", "InstructionsSection")
                        .WithMany("Subsections")
                        .HasForeignKey("InstructionsSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstructionsSection");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.InstructionsSection", b =>
                {
                    b.HasOne("WaltzAndWhisk.Models.Recipe", "Recipe")
                        .WithOne("Instructions")
                        .HasForeignKey("WaltzAndWhisk.Models.InstructionsSection", "RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Macros", b =>
                {
                    b.HasOne("WaltzAndWhisk.Models.Recipe", "Recipe")
                        .WithOne("Macros")
                        .HasForeignKey("WaltzAndWhisk.Models.Macros", "RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Recipe", b =>
                {
                    b.HasOne("WaltzAndWhisk.Models.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.RecipeImage", b =>
                {
                    b.HasOne("WaltzAndWhisk.Models.Recipe", "Recipe")
                        .WithMany("Images")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.IngredientSubsection", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.IngredientsSection", b =>
                {
                    b.Navigation("Subsections");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.InstructionSubsection", b =>
                {
                    b.Navigation("Steps");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.InstructionsSection", b =>
                {
                    b.Navigation("Subsections");
                });

            modelBuilder.Entity("WaltzAndWhisk.Models.Recipe", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Ingredients")
                        .IsRequired();

                    b.Navigation("Instructions")
                        .IsRequired();

                    b.Navigation("Macros");
                });
#pragma warning restore 612, 618
        }
    }
}
